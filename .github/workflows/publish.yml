name: Render and Publish

# Controls when the workflow will run
on:
  # Triggers the workflow on push to the main branch
  push:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

permissions: 
    contents: write
    pull-requests: write

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build-deploy"
  build-deploy:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:

      # Check-out the repository under $GITHUB_WORKSPACE
      - name: Checkout main
        uses: actions/checkout@v4
        with:
          ref: main

      - name: Download and Install Quarto
        run: |
          wget https://github.com/quarto-dev/quarto-cli/releases/download/v1.5.57/quarto-1.5.57-linux-amd64.deb
          sudo apt install ./quarto-1.5.57-linux-amd64.deb
        working-directory: ${{ runner.temp }}

      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12.4'
          cache: 'pip'

      - run: pip install -r requirements.txt

      - run: quarto render
      
      - name: Save the rendered site to a temp directory
        run: mv _site ${{ runner.temp }}

      - name: Checkout gh-pages branch
        uses: actions/checkout@v4
        with:
          ref: gh-pages

      # The complexity here is to facilitate manual runs of the action. There is no github.event in that case.
      - name: Set Git user name and email
        run: |
          email=$(if [-n ${{ github.event.head_commit.author.email }}]; then echo "${{ github.event.head_commit.author.email }}"; else echo "${{ github.triggering_actor }}@hioscar.com"; fi)
          git config --global user.email "$email"
          username=$(if [-n ${{ github.event.head_commit.author.username }}]; then echo "${{ github.event.head_commit.author.username }}"; else echo "${{ github.triggering_actor }}"; fi)
          git config --global user.name "$username"

      - name: Make a feature branch off of gh-pages
        run: git checkout -b release-$(git rev-parse --short ${{ github.sha }})

      - name: Double check what branch we're on
        run: git status

      - name: Delete everything in our local copy of the gh-pages branch
        run: rm -rf *

      - name: Move the rendered site from our temp directory into the local repo directory
        run: mv ${{ runner.temp }}/_site/* .

      - name: Ensure the CNAME file is present and correct
        run: echo 'ichraconnect.hioscar.com' > CNAME

      - name: Git commands to publish with a custom commit message
        run: |
          git add -A
          git commit -m "Built from commit ${{ github.sha }} in branch ${{ github.ref }} triggered by a ${{ github.event_name }}"
          git push -u origin release-$(git rev-parse --short ${{ github.sha }})

      - name: Create Pull Request
        run: |
          echo ${{ secrets.GITHUB_TOKEN }} | gh auth login --with-token
          gh auth status
          gh pr create \
           --base gh-pages \
           --head release-$(git rev-parse --short ${{ github.sha }}) \
           --title "Site Rendered from ${{ github.ref }} $(git rev-parse --short ${{ github.sha }})" \
           --body "This pull request merges the site content rendered from ${{ github.ref }}, commit $(git rev-parse --short ${{ github.sha }}), into gh-pages for immediate release."